parameters:
- name: PreSteps
  type: object
  default: []
- name: PostSteps
  type: object
  default: []
- name: EnvVars
  type: object
  default: {}
- name: MaxParallel
  type: number
  default: 0
- name: BuildInParallel
  type: boolean
  default: true
- name: TimeoutInMinutes
  type: number
  default: 60
- name: Location
  type: string
  default: ''
- name: ServiceDirectory
  type: string
  default: not-specified
- name: TestSetupSteps
  type: stepList
  default: []
- name: CloudConfig
  type: object
  default: []
- name: Platform
  type: object
  default: []

jobs:
  - job: 
    condition: and(succeededOrFailed(), eq(eq(variables['Record'], 'true'), eq('${{ parameters.Platform.TestMode }}', 'Record')))
    displayName: ${{ parameters.Platform.DisplayName }}
    variables:
      - template: ../variables/globals.yml
      - name: OSVmImage
        value: ${{ parameters.Platform.OSVmImage }}

    timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

    pool:
      vmImage: $(OSVmImage)
    ${{ if parameters.Platform.Container }}:
      container: ${{ parameters.Platform.Container }}

    steps:
      - ${{ if parameters.Platform.PreSteps }}:
        - ${{ parameters.Platform.PreSteps }}

      - ${{ parameters.PreSteps }}

      - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml

      - ${{ each step in parameters.TestSetupSteps }}:
        - ${{ each pair in step }}:
            ${{ pair.key }}: ${{ pair.value }}

      - template: /eng/common/TestResources/deploy-test-resources.yml
        parameters:
          Location: ${{ parameters.CloudConfig.Location }}
          ServiceDirectory: '${{ parameters.ServiceDirectory }}'
          SubscriptionConfiguration: ${{ parameters.CloudConfig.SubscriptionConfiguration }}
          ArmTemplateParameters: ${{ parameters.CloudConfig.ArmTemplateParameters }}

      - script: >
          dotnet test eng/service.proj
          --framework ${{ parameters.Platform.TestTargetFramework }}
          --filter "TestCategory!=Manually"
          --logger "trx"
          --logger:"console;verbosity=normal"
          /p:ServiceDirectory=${{ parameters.ServiceDirectory }}
          /p:IncludeSrc=false /p:IncludeSamples=false
          /p:BuildInParallel=${{ parameters.BuildInParallel }}
          ${{ parameters.Platform.AdditionalTestArguments }}

        displayName: "Build & Test (all tests for ${{ parameters.Platform.TestTargetFramework }})"
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0
          AZURE_TEST_MODE: "${{ coalesce(parameters.Platform.TestMode, 'None') }}"
          ${{ each var in parameters.EnvVars }}:
            ${{ var.key }}: ${{ var.value }}
          ${{ each v in parameters.CloudConfig.EnvVars }}:
            ${{ v.key }}: ${{ v.value }}

      - template: /eng/common/TestResources/remove-test-resources.yml
        parameters:
          ServiceDirectory: '${{ parameters.ServiceDirectory }}'
          SubscriptionConfiguration: ${{ parameters.CloudConfig.SubscriptionConfiguration }}

      - task: PublishTestResults@2
        condition: always()
        displayName: "Publish Results (${{ parameters.Platform.TestTargetFramework }})"
        inputs:
          testResultsFiles: "**/*.trx"
          testRunTitle: "$(OSName) ${{ parameters.Platform.TestTargetFramework }}"
          testResultsFormat: "VSTest"
          mergeTestResults: true

      - ${{ parameters.PostSteps }}

      - ${{ if parameters.Platform.PostSteps }}:
        - ${{ parameters.Platform.PostSteps }}
